[gd_scene load_steps=14 format=3 uid="uid://c0lyfd8pu4t2a"]

[ext_resource type="Script" uid="uid://tb8afmqxqklb" path="res://customer_manager.gd" id="1_uxglp"]
[ext_resource type="Resource" uid="uid://u2oggdtetu8k" path="res://defaultUnlock.tres" id="2_3gnd4"]
[ext_resource type="PackedScene" uid="uid://bdyj043bq4k8a" path="res://customer.tscn" id="3_ps2y2"]
[ext_resource type="Script" uid="uid://d21xb116fxl4j" path="res://foods/itemRes.gd" id="4_n5rxu"]
[ext_resource type="Resource" uid="uid://8orrvogpxwmb" path="res://foods/plate.tres" id="5_6e006"]
[ext_resource type="Script" uid="uid://byh0p0n6nwwah" path="res://recipes/RecipeRes.gd" id="6_ml60g"]
[ext_resource type="PackedScene" uid="uid://cubbmg04hougl" path="res://controls.tscn" id="7_6e006"]

[sub_resource type="Resource" id="Resource_6e006"]
resource_local_to_scene = true
script = ExtResource("6_ml60g")
items = Array[ExtResource("4_n5rxu")]([ExtResource("5_6e006"), ExtResource("5_6e006"), ExtResource("5_6e006"), ExtResource("5_6e006"), ExtResource("5_6e006"), ExtResource("5_6e006")])
metadata/_custom_type_script = ExtResource("6_ml60g")

[sub_resource type="Shader" id="Shader_3gnd4"]
code = "shader_type canvas_item;

uniform vec2 pos;
uniform float circsize;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	vec2 v = SCREEN_UV;
	v.y = SCREEN_UV.y * (SCREEN_PIXEL_SIZE.x / SCREEN_PIXEL_SIZE.y);
	vec2 cpos = pos;
	cpos.y /= (SCREEN_PIXEL_SIZE.y / SCREEN_PIXEL_SIZE.x);
	if(distance(v,cpos) < circsize){
		COLOR.a = 0.;
	}
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ps2y2"]
shader = SubResource("Shader_3gnd4")
shader_parameter/pos = Vector2(0.23, 0.61)
shader_parameter/circsize = 0.1

[sub_resource type="Animation" id="Animation_3gnd4"]
resource_name = "opening"
length = 10.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("CanvasLayer/ColorRect:material:shader_parameter/circsize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.0333333, 2.03333, 3.06667, 4.5, 4.86667, 5.8),
"transitions": PackedFloat32Array(1, 0.267943, 1, 0.25, 0.225313, 1),
"update": 0,
"values": [0.01, 0.01, 0.1, 0.1, 0.06, 1.0]
}

[sub_resource type="Animation" id="Animation_ps2y2"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("CanvasLayer/ColorRect:material:shader_parameter/circsize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.1]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_itr24"]
_data = {
&"RESET": SubResource("Animation_ps2y2"),
&"opening": SubResource("Animation_3gnd4")
}

[node name="CustomerManager" type="Node2D"]
script = ExtResource("1_uxglp")
recipesUnlock = ExtResource("2_3gnd4")

[node name="customers" type="Node2D" parent="."]

[node name="Customer" parent="customers" instance=ExtResource("3_ps2y2")]
position = Vector2(623, -170)
recipe = SubResource("Resource_6e006")
is_freezeing = true

[node name="newcustomer" type="Timer" parent="."]

[node name="Marker2D" type="Marker2D" parent="."]
position = Vector2(181, 302)

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="controls" parent="CanvasLayer" instance=ExtResource("7_6e006")]
position = Vector2(251, 135)
scale = Vector2(3.11186, 3.11186)

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
visible = false
material = SubResource("ShaderMaterial_ps2y2")
offset_left = -14.0
offset_top = -313.0
offset_right = 1286.0
offset_bottom = 987.0
color = Color(0, 0, 0, 1)

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_itr24")
}
autoplay = "opening"

[connection signal="timeout" from="newcustomer" to="." method="_on_newcustomer_timeout"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
