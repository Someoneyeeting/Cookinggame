[gd_scene load_steps=17 format=3 uid="uid://di11wr21q4u5w"]

[ext_resource type="Texture2D" uid="uid://bp44dmw6xpnsv" path="res://assets/sprites/star_off.png" id="1_l6opp"]
[ext_resource type="Texture2D" uid="uid://dq3f447tk8ka6" path="res://assets/sprites/star_on.png" id="2_fi8ru"]
[ext_resource type="Texture2D" uid="uid://jrnyuby7h8oe" path="res://assets/sprites/star_hype.png" id="3_xfnq7"]
[ext_resource type="AudioStream" uid="uid://cjv4hog1vj2v7" path="res://assets/audio/scoremult.wav" id="4_fi8ru"]

[sub_resource type="GDScript" id="GDScript_yoar7"]
script/source = "extends Node2D


var mode := 0
var t :float=0
@export var grad : Gradient
var clr : Color = Color.WHITE
@export var goldclr : Color 
var ispanic := false
var isclosed := false
var v :Vector2= Vector2.ZERO

func _physics_process(delta: float) -> void:
	if(isclosed):
		$Sprite2D.global_position += v
		v.y += delta * 40
		return
	var speedfact = 1
	if(mode == 0):
		speedfact = 0
	elif(mode == 1):
		speedfact = 6
	elif(mode == 2):
		speedfact = 7
	$Sprite2D.frame = mode
	
	$Sprite2D.material.set_shader_parameter(\"hype\",mode == 2);
	if(mode == 2):
		#$Sprite2D.rotation_degrees = sin(t * 3) * 2
		$Sprite2D.position.y = randf_range(-2,2)
		$Sprite2D.position.x += randf_range(-10,10)
		#$Sprite2D.modulate = Color.from_hsv($Sprite2D.modulate.h + 0.01,$Sprite2D.modulate.s,$Sprite2D.modulate.v)
		var clrval = Time.get_unix_time_from_system()
	else:
		$Sprite2D.rotation_degrees = 0
	
	if(ispanic):
		$Sprite2D.position.y = sin(position.x + t * 40) * 5
		modulate = Color(0.6,0.1,0.1)
	else:
		$Sprite2D.position.x = 0
		modulate = Color.WHITE
		
	if(mode == 1):
		clr = goldclr
	
	t += delta
	
	$Sprite2D.modulate = lerp($Sprite2D.modulate,clr,0.5)
	
	$Sprite2D.position.x = sin(t * speedfact  + global_position.x * global_position.x ) * speedfact

func deactivate():
	mode = 0
	clr = Color(0.3,0.3,0.3)
	%glow.hide()

func activate():
	mode = 1
	clr = goldclr
	%glow.show()
	%glow.color = goldclr
	%glow.material.set_shader_parameter(\"strength\",0.3)
	jump()



func panic():
	ispanic = true

func unpanic():
	ispanic = false

func hype():
	mode = 2
	clr = Color(1,1,1)
	%glow.show()
	%glow.color = Color(\"002fff\")
	%glow.material.set_shader_parameter(\"strength\",1.4)

func die():
	isclosed = true
	v.y = -10
	v.x = randf_range(-5,5)
	rotation_degrees = randf_range(-20,20)

func reset():
	isclosed = false
	v = Vector2.ZERO
	rotation_degrees = 0
	$Sprite2D.position = Vector2.ZERO

func jump():
	$AnimationPlayer.play(\"jump\")


func expand():
	$AnimationPlayer.play(\"expand\")
	$mult.play()
	
"

[sub_resource type="Gradient" id="Gradient_l6opp"]
interpolation_mode = 1
offsets = PackedFloat32Array(0.00574713, 0.368852, 0.770492)
colors = PackedColorArray(0, 0.185714, 1, 1, 0, 0.675116, 1, 1, 0, 0.328891, 1, 1)

[sub_resource type="Shader" id="Shader_l6opp"]
code = "shader_type canvas_item;

uniform sampler2D grad : repeat_enable;
uniform bool hype = false;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	if(hype){
		COLOR *= texture(grad,vec2(UV.x * UV.y * 0.3 + UV.y * UV.x + TIME * 3.,0.));
	}
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="GradientTexture1D" id="GradientTexture1D_l6opp"]
gradient = SubResource("Gradient_l6opp")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fi8ru"]
resource_local_to_scene = true
shader = SubResource("Shader_l6opp")
shader_parameter/grad = SubResource("GradientTexture1D_l6opp")
shader_parameter/hype = false

[sub_resource type="SpriteFrames" id="SpriteFrames_4m2w3"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_l6opp")
}, {
"duration": 1.0,
"texture": ExtResource("2_fi8ru")
}, {
"duration": 1.0,
"texture": ExtResource("3_xfnq7")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="Shader" id="Shader_fi8ru"]
code = "shader_type canvas_item;

uniform float strength = 1.;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	COLOR.a = 0.5 - distance(UV,vec2(0.5,0.5));
	COLOR.a *= strength;
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xfnq7"]
resource_local_to_scene = true
shader = SubResource("Shader_fi8ru")
shader_parameter/strength = 0.5

[sub_resource type="Animation" id="Animation_fi8ru"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.98417, 2.98417)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_xfnq7"]
resource_name = "expand"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.133333, 0.3),
"transitions": PackedFloat32Array(0.225313, 3.605, 1),
"update": 0,
"values": [Vector2(2.98417, 2.98417), Vector2(4.89084, 4.89084), Vector2(2.98417, 2.98417)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.143333, 0.3),
"transitions": PackedFloat32Array(0.258816, 2.92817, 1),
"update": 0,
"values": [0.0, 0.523598, 0.0]
}

[sub_resource type="Animation" id="Animation_l6opp"]
resource_name = "jump"
length = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(0.554784, 1.1487, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, -18), Vector2(0, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_xfnq7"]
_data = {
&"RESET": SubResource("Animation_fi8ru"),
&"expand": SubResource("Animation_xfnq7"),
&"jump": SubResource("Animation_l6opp")
}

[node name="StarSprite" type="Node2D"]
script = SubResource("GDScript_yoar7")
grad = SubResource("Gradient_l6opp")
goldclr = Color(0.988783, 0.650817, 0.260293, 1)

[node name="Sprite2D" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_fi8ru")
scale = Vector2(2.98417, 2.98417)
sprite_frames = SubResource("SpriteFrames_4m2w3")

[node name="glow" type="ColorRect" parent="Sprite2D"]
unique_name_in_owner = true
visible = false
show_behind_parent = true
material = SubResource("ShaderMaterial_xfnq7")
offset_left = -20.0
offset_top = -18.0
offset_right = 20.0
offset_bottom = 22.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_xfnq7")
}

[node name="mult" type="AudioStreamPlayer" parent="."]
stream = ExtResource("4_fi8ru")
volume_db = -15.0
