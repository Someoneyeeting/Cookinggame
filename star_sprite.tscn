[gd_scene load_steps=10 format=3 uid="uid://di11wr21q4u5w"]

[ext_resource type="Texture2D" uid="uid://bp44dmw6xpnsv" path="res://assets/sprites/star_off.png" id="1_l6opp"]
[ext_resource type="Texture2D" uid="uid://dq3f447tk8ka6" path="res://assets/sprites/star_on.png" id="2_fi8ru"]
[ext_resource type="Texture2D" uid="uid://jrnyuby7h8oe" path="res://assets/sprites/star_hype.png" id="3_xfnq7"]

[sub_resource type="GDScript" id="GDScript_yoar7"]
script/source = "extends Node2D


var mode := 0
var t :float=0
@export var grad : Gradient
var clr : Color = Color.WHITE
@export var goldclr : Color 

func _physics_process(delta: float) -> void:
	var speedfact = 1
	if(mode == 0):
		speedfact = 0
	elif(mode == 1):
		speedfact = 3
	elif(mode == 2):
		speedfact = 5
	$Sprite2D.frame = mode
	
	$Sprite2D.material.set_shader_parameter(\"hype\",mode == 2);
	if(mode == 2):
		#$Sprite2D.rotation_degrees = sin(t * 3) * 2
		$Sprite2D.position.x = randf_range(-2,2)
		$Sprite2D.position.y += randf_range(-2,2)
		#$Sprite2D.modulate = Color.from_hsv($Sprite2D.modulate.h + 0.01,$Sprite2D.modulate.s,$Sprite2D.modulate.v)
		var clrval = Time.get_unix_time_from_system()
	else:
		$Sprite2D.rotation_degrees = 0
		$Sprite2D.position.x = 0
		
	if(mode == 1):
		clr = goldclr
	
	t += delta * speedfact 
	
	$Sprite2D.modulate = lerp($Sprite2D.modulate,clr,0.5)
	
	$Sprite2D.position.y = sin(t + global_position.x * global_position.x ) * speedfact

func deactivate():
	mode = 0
	clr = Color(0.3,0.3,0.3)

func activate():
	mode = 1
	clr = goldclr

func hype():
	mode = 2
	clr = Color(1,1,1)
"

[sub_resource type="Gradient" id="Gradient_l6opp"]
interpolation_mode = 1
offsets = PackedFloat32Array(0.00574713, 0.368852, 0.770492)
colors = PackedColorArray(0, 0.185714, 1, 1, 0, 0.675116, 1, 1, 0, 0.328891, 1, 1)

[sub_resource type="Shader" id="Shader_l6opp"]
code = "shader_type canvas_item;

uniform sampler2D grad : repeat_enable;
uniform bool hype = false;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	if(hype){
		COLOR *= texture(grad,vec2(UV.x * UV.y * 0.3 + UV.y * UV.x + TIME * 3.,0.));
	}
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="GradientTexture1D" id="GradientTexture1D_l6opp"]
gradient = SubResource("Gradient_l6opp")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fi8ru"]
resource_local_to_scene = true
shader = SubResource("Shader_l6opp")
shader_parameter/grad = SubResource("GradientTexture1D_l6opp")
shader_parameter/hype = false

[sub_resource type="SpriteFrames" id="SpriteFrames_4m2w3"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_l6opp")
}, {
"duration": 1.0,
"texture": ExtResource("2_fi8ru")
}, {
"duration": 1.0,
"texture": ExtResource("3_xfnq7")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[node name="StarSprite" type="Node2D"]
script = SubResource("GDScript_yoar7")
grad = SubResource("Gradient_l6opp")
goldclr = Color(0.988783, 0.650817, 0.260293, 1)

[node name="Sprite2D" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_fi8ru")
scale = Vector2(2.98417, 2.98417)
sprite_frames = SubResource("SpriteFrames_4m2w3")
