[gd_scene load_steps=16 format=3 uid="uid://6nbo85ja31eo"]

[ext_resource type="Script" uid="uid://do5kaaf2lbpys" path="res://player.gd" id="1_4flbx"]
[ext_resource type="PackedScene" uid="uid://8wj5cic12r67" path="res://plate.tscn" id="2_onrkg"]
[ext_resource type="PackedScene" uid="uid://cyfq1svoocqic" path="res://targetable.tscn" id="3_i3pqv"]
[ext_resource type="AudioStream" uid="uid://dkmj8vjd5msyh" path="res://plate.wav" id="4_hqtel"]
[ext_resource type="AudioStream" uid="uid://cnsqrjxlklv3k" path="res://assets/audio/chicken_throw.wav" id="5_2hs0m"]
[ext_resource type="AudioStream" uid="uid://r7wia6rowagv" path="res://assets/audio/chicken_die.wav" id="5_sweqy"]
[ext_resource type="AudioStream" uid="uid://bahrftis21h06" path="res://assets/audio/cantpick.wav" id="7_1jxqw"]

[sub_resource type="Shader" id="Shader_2hs0m"]
code = "shader_type canvas_item;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	COLOR.a = 1. - UV.y - 0.2;
	float dist = distance(0.5,UV.x);
	if(dist * 5. + 1. - UV.y - 2.56 > 0.){
		COLOR.a *= (0.5 - dist) * 5. + 1. - UV.y - 2.56;
	}
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1jxqw"]
shader = SubResource("Shader_2hs0m")

[sub_resource type="Shader" id="Shader_onrkg"]
code = "shader_type canvas_item;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	if(distance(vec2(0.5,0.5),UV) > 0.5){
		COLOR.a = 0.;
	}
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_i3pqv"]
shader = SubResource("Shader_onrkg")

[sub_resource type="CircleShape2D" id="CircleShape2D_onrkg"]

[sub_resource type="Shader" id="Shader_1jxqw"]
code = "shader_type canvas_item;

uniform float skew = 0.0;

void vertex() {
	VERTEX.x += -skew * (1.- UV.y);
}

void fragment() {
	// Called for every pixel the material is visible on.
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_dw050"]
shader = SubResource("Shader_1jxqw")
shader_parameter/skew = 0.0

[sub_resource type="CircleShape2D" id="CircleShape2D_hqtel"]
radius = 25.0799

[node name="Player" type="CharacterBody2D" node_paths=PackedStringArray("plate") groups=["targetable"]]
script = ExtResource("1_4flbx")
move_speed = 400.0
plate = NodePath("plate")

[node name="reflect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_1jxqw")
offset_left = -22.0
offset_top = 14.0
offset_right = 9.0
offset_bottom = 40.0
scale = Vector2(1.41244, 1.41244)
color = Color(0.927686, 0.927686, 0.927686, 1)

[node name="range" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_i3pqv")
offset_left = -100.0
offset_top = -100.0
offset_right = 100.0
offset_bottom = 100.0
pivot_offset = Vector2(100, 100)
color = Color(0.855469, 0.0468974, 0, 0.215686)

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
scale = Vector2(1.46767, 1.46767)
shape = SubResource("CircleShape2D_onrkg")

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_dw050")
offset_left = -14.0
offset_top = -14.0
offset_right = 6.0
offset_bottom = 6.0
scale = Vector2(1.41244, 1.41244)

[node name="timers" type="Node" parent="."]

[node name="line" type="Timer" parent="timers"]
wait_time = 0.1
one_shot = true

[node name="Line2D" type="Line2D" parent="."]
top_level = true
points = PackedVector2Array(0, 0, 0, 0)
width = 30.0

[node name="plate" parent="." instance=ExtResource("2_onrkg")]
position = Vector2(30, -11)

[node name="click" parent="." node_paths=PackedStringArray("target") instance=ExtResource("3_i3pqv")]
target = NodePath("..")

[node name="CollisionShape2D2" type="CollisionShape2D" parent="click"]
shape = SubResource("CircleShape2D_hqtel")

[node name="break" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("4_hqtel")

[node name="chicken" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("5_2hs0m")
volume_db = 3.0

[node name="chicken_echo" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("5_sweqy")
volume_db = -2.0

[node name="cantpick" type="AudioStreamPlayer" parent="."]
stream = ExtResource("7_1jxqw")

[connection signal="timeout" from="timers/line" to="." method="_on_line_timeout"]
